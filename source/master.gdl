// /* */
// Substitutional rules

#ifndef opt2
//The following rule is same as the regular expression {0,2}
#define opt2(x) [[x]? x]?

//{0,3}
#define opt3(x) [opt2(x) x]?
#endif


#include "features.gdh"

table(glyph);
cCons = (g_ka g_kha g_ga g_gha g_nga 
	 g_ca g_cha g_ja g_jha g_nya
	 g_tta g_ttha g_dda g_ddha g_nna
	 g_ta g_tha g_da g_dha g_na g_nnna
	 g_pa g_pha g_ba g_bha g_ma
	 g_ya g_ra g_rra g_la g_lla g_llla g_va g_sha g_ssa g_sa g_ha
	 g_qa g_khha g_ghha g_za g_dddha g_rha g_fa g_yya)
wGlyphs = (g_kha g_ha_vir_ma) // list of wide glyphs. the imatra should be substituted with a wide imatra when followed by these consonants.
cMatra = (g_aamatra g_imatra g_iimatra g_umatra g_uumatra g_ecandramatra g_eshortmatra g_ematra g_aimatra g_ocandramatra g_oshortmatra g_omatra g_aumatra)
cMarkNoReph = (g_anusvara g_candrabindu)
cMark = (cMarkNoReph g_ra_reph)
cno_nukt = (g_ka g_kha g_ga g_ja g_dda g_ddha g_pha g_ya);
cnukt = (g_qa g_khha g_ghha g_za g_dddha g_rha g_fa g_yya);
cno_vatuspl = (g_tta g_ttha g_dda g_nga g_ddha g_cha g_ssa_vir_tta g_ssa_vir_ttha g_ssa_vir_tta_vir_va);
rVmatra = (g_iimatra g_umatra g_uumatra g_ecandramatra g_eshortmatra g_ematra g_aimatra g_ocandramatra g_oshortmatra g_omatra g_aumatra)
rVmatraReph = (g_iimatra_reph g_ecandramatra_reph g_eshortmatra_reph g_ematra_reph g_aimatra_reph g_ocandramatra_reph g_oshortmatra_reph g_omatra_reph g_aumatra_reph)
rVmatraB = (g_iimatra g_eshortmatra g_ematra g_aimatra g_ocandramatra g_oshortmatra g_omatra g_aumatra)
rVmatraBindu = (g_iimatra_bindu g_eshortmatra_bindu g_ematra_bindu g_aimatra_bindu g_ocandramatra_bindu g_oshortmatra_bindu g_omatra_bindu g_aumatra_bindu)
rVmatraBinduReph = (g_iimatra_bindu_reph g_eshortmatra_bindu_reph g_ematra_bindu_reph g_aimatra_bindu_reph g_ocandramatra_bindu_reph g_oshortmatra_bindu_reph g_omatra_bindu_reph g_aumatra_bindu_reph)
cIndepV = (g_avowel g_aavowel g_ivowel g_iivowel g_uvowel g_uuvowel g_rvocalicvowel g_lvocalicvowel g_ecandravowel g_eshortvowel g_evowel g_aivowel g_ocandravowel g_oshortvowel g_ovowel g_auvowel)
cnonhalant = (cMatra cMark cIndepV)
cws = (g_space g_zwj g_zwnj)
endtable;

table(substitution);
pass(1);
// To reorder short e matra (along with bindu and/or reph if they're present) to the the left side of the consonant 
g_ra g_vir _ > _ _ g_ra_reph:(1 2) / _ _ ^ cCons opt3(g_vir cCons) g_nukta? cMatra? cMark? _;
_ g_imatra > @I _ / _ cCons opt3(g_vir cCons) g_nukta? _=I;
_ _ g_imatra cMark > @I @M _ _ / _ _ cCons opt3(g_vir cCons) g_nukta? _=I _=M;
_ _ _ g_imatra cMark cMark > @I @M @N _ _ _ / _ _ _ cCons opt3(g_vir cCons) g_nukta? _=I _=M _=N;

g_vir > @v / cCons _=v;
_ g_vir > g_dottedcircle:v @v / _ _=v;

cMatra > @m / (cCons cMatra cMark g_nukta cnukt) _=m;
_ cMatra > g_dottedcircle:m @m / _ _=m;

cMarkNoReph > @m / (cCons cIndepV cMatra cMark cnukt) _=m;
_ cMarkNoReph > g_dottedcircle:m @m / _ _=m;



//to support multiple writing systems
if (style == hindi)
	cnep > cno_nep / ^ _;
else if (style == nepali)
	cno_nep > cnep / ^ _;
else if (style == archaic)
	cno_archaic > carchaic / ^ _;
endif

endpass; 

pass(2);
//half forms
cno_half g_vir > @1 @2 / _ _ (g_ra g_zwnj);
cno_half g_vir > chalf:(1 2) _;
//nukta forms
cno_nukt g_nukta > cnukt:(1 2) _ / ^ _ _;
//matra bindu
cno_bindu g_anusvara > cbindu:(1 2) _;
//conjuncts
//most of these conjuncts will be automatically generated by panini_src.gdl
endpass;

pass(3);
//replace the long version of imatra when it is followed by wide gliphs. Make the conjunct form of the imatra.wide anusvara? reph?
g_imatra g_anusvara > g_imatra_wide_bindu:(1 2) _ / _ _ (wGlyphs chalf);
g_imatra_bindu g_ra_reph > g_imatra_wide_bindu_reph:(1 2) _ / _ _ (wGlyphs chalf);
g_imatra g_ra_reph > g_imatra_wide_reph:(1 2) _ / _ _ (wGlyphs chalf);
g_imatra > g_imatra_wide / _ wGlyphs;

//Make the conjunct form of the imatra anusvara? reph?
g_imatra g_ra_reph g_anusvara > g_imatra_bindu_reph:(1 2 3) _ _;
g_imatra_bindu g_ra_reph > g_imatra_bindu_reph:(1 2) _;
g_imatra g_anusvara > g_imatra_bindu:(1 2) _;
g_imatra g_ra_reph > g_imatra_reph:(1 2) _;

//Making conjucnt form of the <vowel>matra anusvara? reph?
rVmatra g_ra_reph > rVmatraReph:(1 2) _;
rVmatraB g_anusvara > rVmatraBindu:(1 2) _;
rVmatraBindu g_ra_reph > rVmatraBinduReph:(1 2) _;

//vatu forms

// क्र त्र 
cno_vatu g_vir g_ra > cvatu:(1 2 3) _ _;
g_vir g_ra > g_ra_alt:(2 3) _ / cno_vatuspl _ _;

(g_zwj g_zwnj) > _;
endpass;

endtable;


